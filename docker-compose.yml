services:
  postgres:
    image: postgres:15
    container_name: infuse-postgres
    environment:
      POSTGRES_DB: infuse_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - prod
      - production

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    profiles:
      - prod
      - production
      - dev
      - development

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    profiles:
      - prod
      - production
      - dev
      - development

  backend:
    build:
      context: ./packages/backend
    container_name: infuse-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/infuse_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    restart: unless-stopped
    profiles:
      - prod
      - production

  backend-dev:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: infuse-backend-dev
    command: sh -c "mvn spotless:apply && mvn spring-boot:run -Dspring-boot.run.profiles=dev"
    working_dir: /app
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./packages/backend:/app
      - ~/.m2:/root/.m2
    restart: unless-stopped
    profiles:
      - dev
      - development

  frontend:
    build:
      context: ./packages/frontend
    container_name: infuse-frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    profiles:
      - prod
      - production

  frontend-dev:
    image: node:20-alpine
    container_name: infuse-frontend-dev
    command: sh -c "yarn && yarn start -- --host 0.0.0.0"
    working_dir: /app
    ports:
      - "4200:4200"
    volumes:
      - ./packages/frontend:/app
      - node_modules:/app/node_modules
    restart: unless-stopped
    profiles:
      - dev
      - development

volumes:
  postgres_data:
  node_modules: 