version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: infuse-postgres
    environment:
      POSTGRES_DB: infuse_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - prod
      - production

  backend:
    build:
      context: ./packages/backend
    container_name: infuse-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/infuse_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    restart: unless-stopped
    profiles:
      - prod
      - production

  backend-dev:
    build:
      context: ./packages/backend
    container_name: infuse-backend-dev
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
    volumes:
      - ./packages/backend/dev-database.db:/app/dev-database.db
    restart: unless-stopped
    profiles:
      - dev
      - development

  # Serviço para o frontend (comentado até ser implementado)
  # frontend:
  #   build:
  #     context: ./packages/frontend
  #   container_name: infuse-frontend
  #   ports:
  #     - "3000:80"
  #   restart: unless-stopped
  #   profiles:
  #     - prod
  #     - production

volumes:
  postgres_data: 